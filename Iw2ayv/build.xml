<!-- Ant makefile for iw2ayv -->
<!-- Questa è la libreria di routines comuni a più progetti. -->
<!-- Ad ogni build viene aggiornato il buildnumber, e viene  -->
<!-- esportata nei 3 imagej possibili: 1) dentro eclipse     -->
<!-- 2) in winXP 3) in win7. Questo per propagare subito     -->
<!-- le modifiche apportate, nei siti di utilizzo. Resta     -->
<!-- comunque compito dei build delle varie applicazioni     -->
<!-- che la impiegano, di effettuare la medesima             -->
<!-- distribuzione, in modo che sia sempre assicurata la     -->
<!-- presenza dell'indispensabile libreria. Idem per         -->
<!-- qualsiasi altra forma di distribuzione.                 -->

<!--    -->



<project name="utils" default="main">

	<!-- Definizioni property -->
	
    <!-- Percorso base in cui installare il plugin, da aggiornare in caso di spostamenti-->
    <property name="imagej.plugins.base" location="C:/Programmi2/ImageJ/plugins" />
	<property name="FIJI.plugins.base" location="C:/Programmi2/FIJI/fiji-win64/Fiji.app/plugins" />

	<property name="imagej.plugins.dir" location="${imagej.plugins.base}/iw2ayv" />
	<property name="FIJI.plugins.dir" location="${FIJI.plugins.base}/iw2ayv" />
	
	<!-- ====== Percorsi principali del progetto, tutti localizzati automaticamente con basedir ===== -->
	<property name="source"         location="${basedir}/src/${ant.project.name}" />
	<property name="output"         location="${basedir}/build" />
	<property name="dist"  			location="${basedir}/dist" />
	<property name="data" 			location="${basedir}/data" />
	<property name="test"           location="${basedir}/test/contMensili" />
	<!-- ====== Path ij.jar VERIFICARE ed AGGIORNARE, solo se necessario === -->	
	<property name="repo" 	location="${basedir}/../.." />
	<property name="pathImageJ" 	location="C:\Users\Alberto\Repository\Workspace\workspaceBase\imagej\ij.jar" />
	
	<!-- ===== stampa dei valori property ===== -->	
	<echo message="project name= ${ant.project.name}" />
	<echo message="basedir= ${basedir}" />
	<echo message="ant.file= ${ant.file}" />
	<echo message="source= ${source}" />
	<echo message="output= ${output}" />
	<echo message="dist= ${dist}" />
	<echo message="data= ${data}" />
	<echo message="test= ${test}" />
	<echo message="repo= ${repo}" />
	<echo message="pathImageJ= ${pathImageJ}" />
	<!-- "pathImageJ= C:\Users\Alberto\Repository\Workspace\workspaceBase\imagej\ij.jar" /-->
	<!-- =============================================" -->

	
	<!-- Marca temporale per versionamento -->
	<tstamp>
		<format property="time.stamp" pattern="yyyyMMMdd_HHmm"/>
	</tstamp>
	<echo message="tstamp= ${time.stamp}" />		

	<!-- 1) ================	 MAIN ROUTINE, ESEGUE TUTTI I PASSAGGI 	============= -->
	<target name="main" depends="init, 
								compile, 
								moveSources, 
								jarx, 
								wipe, 
								cond_WIN7, 
								cond_FIJI" />


	<!-- 2) inizializzazione cartelle -->
	<target name="init" description="Initialize folders">
		<echo message="Eseguo INIT" />
		<buildnumber />
		<tstamp />
		
		<delete dir="${output}" />
		<mkdir dir="${output}" />
		<echo message="mkdir dir=${output}" />

		<delete>
			<!-- ATTENZIONE: NON CANCELLO DIST PER POTERLA MANTENERE IN GITHUB!!!!!!-->
			<!-- mi limito a cancellare i .jar contenuti -->
			<fileset dir="${dist}" includes="*.jar" defaultexcludes="false" />
		</delete>
		
	</target>
	

	 <!-- 3) Compilazione delle classi Java -->
	<target name="compile" description="Compile everything.">
		<echo message="Eseguo COMPILE" />
		<!-- Build everything; add debug="on" to debug -->
		<javac 	srcdir="${source}" 
				destdir="${output}" 
				target="1.8" 
				source="1.8" 
				optimize="on" 
				includeAntRuntime="yes"
				encoding="iso8859-1" 
				debug="on" 
				classpath="${pathImageJ}" />
	</target>

	<!-- 4) MOVE1 copia nella cartella build tutto, salvo i .csv (solo limiti.csv) -->
	<target name="moveSources" description="Move the sources.">
		<copy todir="${output}">
			<fileset dir="." includes=" *.txt , *.pdf, *.rtf, *.number, jpg" />
		</copy>
		<!--copy todir="${output2}">
			<fileset dir="./src/utils/" includes=" *.java" />
		</copy>
		<copy todir="${output3}">
			<fileset dir="./test/utils/" includes=" *.java" />
		</copy>
		<copy todir="${output4}">
			<fileset dir="./data/" includes=" *.*" />
		</copy-->
	</target>

	<!-- 5) cancellato -->

	<!-- 6) Creazione del JAR (con Manifest personalizzato) -->
	<target name="jarx" description="JARs the Task">
		<echo message="Eseguo CREA JAR" />
		<delete file="MANIFEST.MF" />
		<property name="version.num" value="1.00" />
		<manifest file="MANIFEST.MF">
			<attribute name="Built-By" value="Alberto Duina - iw2ayv" />
			<attribute name="Main-Class" value="${package}.utils" />
			<attribute name="Implementation-Version" value="${time.stamp}" />
		</manifest>

		<jar destfile="${output}/iw2ayv_${time.stamp}.jar" manifest="MANIFEST.MF">
			<fileset dir="${output}" />
		</jar>
		<delete failonerror="false" verbose="true">
			<fileset dir="${dist}" includes="*.*" />
		</delete>
		<copy todir="${dist}">
			<fileset dir="${output}" includes="*.jar" />
		</copy>
	</target>

	<!-- 8) WIPE cancella i file di build intermedi  -->	
	<target name="wipe" description="Delete the build intermedie files.">
		<delete failonerror="false" verbose="true">
			<fileset dir="${output}" includes="*.*" />
		</delete>
	</target>

	<target name="libraries" description="copy the external libraries">
	</target>

	<target name="clean" description="Delete the build files.">
		<echo message="Eseguo CLEAN" />
		<delete failonerror="false" verbose="true">
			<fileset dir="." includes="*.class" />
		</delete>
	</target>



	<target name="cond_WIN7" >
		<echo message="Eseguo cond_WIN7" />
		<delete dir="${imagej.plugins.dir}" />
		<mkdir dir="${imagej.plugins.dir}" />
		<copy todir="${imagej.plugins.dir}">
			<fileset dir="${dist}" includes="*.jar" />
		</copy>
	</target>

	<target name="cond_FIJI" >
		<echo message="Eseguo cond_FIJI" />
		<delete dir="${FIJI.plugins.dir}" />
		<mkdir dir="${FIJI.plugins.dir}"  />
		<copy todir="${FIJI.plugins.dir}" >
			<fileset dir="${dist}" includes="*.jar" />
		</copy>
	</target>

	<target name="wait">
		<echo message="wait" />
		<input message="press return" />
	</target>



</project>

